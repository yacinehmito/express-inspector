#!/usr/bin/env node

const path = require("path");
const yargs = require("yargs");

yargs
  .usage("$0 <example>")
  .command(
    "$0 <example>",
    false,
    yargs =>
      yargs.positional("example", {}).check(({ example }) => {
        const fs = require("fs");
        const path = require("path");

        const exampleExists = fs
          .readdirSync(path.join(__dirname, "../examples"))
          .includes(example);

        if (!exampleExists) {
          throw `Example ${example} not found`;
        }
        return true;
      }),
    argv => execute(argv.example)
  )
  .help("h")
  .alias("h", "help").argv;

function requireExample(example) {
  return require(path.join("../examples", example));
}

function runExample(example) {
  return require("../cli").run(
    require.resolve(path.join("../examples", example)),
    require("..")
  );
}

function execute(example) {
  const Module = require("module");

  // Substitute with local version
  Module._load = new Proxy(Module._load, {
    apply(target, context, args) {
      if (args[0] === "express-inspector") {
        args[0] = require.resolve("..");
      }
      return Reflect.apply(target, context, args);
    }
  });

  switch (example) {
    case "full":
      return requireExample("full");
    case "simple":
      return runExample("simple");
    default:
      throw new Error(`No way to know how to run example ${example}`);
  }
}
